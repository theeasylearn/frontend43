sql query
---------------------------------
1) create a table
    create table table_name(
        field datatype etc..
    )

    creating users table
    CREATE TABLE users(
        id int PRIMARY KEY AUTO_INCREMENT ,
        name varchar(50),
        age int,
        address varchar(200)
    )

2) detete a table
    drop table table_name
    drop table users

3) rename a table
    rename table old_table to new_table name
    rename table students to teachers

4)  truncate table 
    truncate table command is used to delete all rows from table and reset primary key to 1 
    truncate table tablename 
    truncate table person 
---------------------------------------------------
1) insert
    add row to table
    1) insert into table_name(fields...) values(data...) 
    insert into person(name,dob,salary,gender,photo) values("samarth","2004-12-01",20000,1,"user.jpeg") ;

    2) insert into table_name values(data...)
    insert into person values("","samarth","2004-12-01",20000,1,"user.jpeg") ;

    insert multiple records
    INSERT INTO person (name, dob, salary, gender, photo) VALUES
    ("Samarth", "2004-12-01", 20000, 1, "user1.jpeg"),
    ("Aarav", "1998-07-15", 35000, 1, "user2.jpeg"),
    ("Neha", "1995-03-22", 40000, 2, "user3.jpeg"),
    ("Rohan", "2000-11-05", 28000, 1, "user4.jpeg"),
    ("Priya", "1997-09-10", 50000, 2, "user5.jpeg"),
    ("Vikram", "1992-06-30", 60000, 1, "user6.jpeg"),
    ("Ananya", "1999-02-18", 32000, 2, "user7.jpeg"),
    ("Kunal", "2001-05-25", 27000, 1, "user8.jpeg"),
    ("Simran", "1996-08-12", 45000, 2, "user9.jpeg"),
    ("Rahul", "1993-04-20", 55000, 1, "user10.jpeg");

2) delete
    delete from table_name where condition ; 

    delete row whos id is 4
    DELETE FROM person WHERE id=4 ;

    delete row whos name is "devarsh"
    DELETE FROM person WHERE name="devarsh";

    delete records of female
    DELETE FROM person WHERE gender=2;

    

3) update
   update command is used to change existing row's column value. we can change one more column value using update command 

   syntax 
   update tablename set field=value[,field2=value,field3=value] [where condition]

   update all person salary by 99 rupees 
   update person set salary = salary + 99

   increase all person salary by 1 rupees of those person whose salary is below 30000
   update person set salary = salary + 1 where salary<30000 

   decrease salary by 99 rupees of those person whose id are 2 or 3 or 5 or 6 or 9  or 10
   update person set salary= salary - 99 where id=2 or id=3 or id=5 or id=6 or id=9 or id=10
                or 
   update person set salary= salary + 99 where id in(2,3,5,6,9,10)

   update name to 'Divya Kurmari' gender to 0 and birtdate to 01-01-1984 of person whose id is 2 
   update person set name='Divya Kurmari',gender=0,dob='1984-01-01' where id = 2

4) select
    select command is used to fetch records from tables. one can fetch all/selected fields, all/selected records can display records in specified order.

    syntax
    select *|<fieldlist> from <table> [where <condition>] [group by <fieldname>] [having <condition>]
    [order by <field>]  [limit position,offset]

    fetch all fields of all rows of customers 
    select * from customers

    fetch customerNumber,customerName,city,state,country of all customers
    select customerNumber,customerName,city,state,country from customers

    fetch customerNumber,customerName,city,state,country of customers who are from usa 
    select customerNumber,customerName,city,state,country from customers where country='USA'

    fetch customerNumber,customerName,city,state,country,creditLimit of customers who is creditLimit>100000

    select customerNumber,creditLimit,customerName,city,state,country from customers where creditLimit>1000000

	 fetch customerNumber,customerName,creditLimit of customers who is creditLimit between 1 and 2 lakh 
	 
	 select customerNumber,customerName,creditLimit from customers where creditLimit>=100000 and creditLimit<=200000
	
			or 
	select customerNumber,customerName,creditLimit from customers where creditLimit between 100000 and 200000

	fetch customerName,country of those customers who are from usa or france or Germany
	
	select customerName,country from customers where country='usa' or country='france' or country='germany'
	
	or 
	select customerName,country from customers where country in ('USA','France','germany')
	
	fetch customerName,country of those customers who are not from usa or france or Germany

	select customerName,country from customers where country!='usa' and  country!='france' and country!='germany'
	
	select customerName,country from customers where country not in ('USA','France','germany')

	fetch customerName of those customer whose name has 'wheels' anywhere (begining, in between, at the end)
	
	select customerName from customers where customerName like '%wheels%'
	
	fetch customerName of those customer whose name has 'wheels' at begining.
	select customerName from customers where customerName like 'wheels%'
	
	fetch unique countrynames from customers
	select distinct(country) from customers
	
	Aggregate functions
	-----------------------
	function which works upon numeric field and always returns single value is called Aggregate functions. 
	
	sum
	used to get total of givn numeric field 
	
	avg
	used to get average of given numeric field 
	
	min
	used to get minimum value of given numeric field 
	
	max 
	used to get maximum value of given numeric field. 
	
	count(*)
	used to count no of rows in table as per condition.
	
	findout total payment amount received so far.
	select sum(amount) from payments
	
	findout minimum payment amount received so far.
	select min(amount) from payments
	
	findout maximum payment amount received so far.
	select max(amount) from payments
	
	findout average payment amount received so far.
	select avg(amount) from payments
	
	findout no of (count) payment amount received so far.
	select count(*) from payments
	
	findout total payments, no of payments of customerNumber 112
	select sum(amount), count(*) from payments where customerNumber=112
	
	findout total payment, no of payment of each customers
	select sum(amount),count(*), customerNumber from payments group by customerNumber

    findout how many customers from each country.
    select count(*),country from customers group by country

    findout total no of employees 
    select count(*) from employees

    findout office wise employees count 
    select count(*),officecode from employees group by officecode

    fetch only those customerNumber who have made less then 50000 Rs payment total 
    select sum(amount), customerNumber from payments group by customerNumber having sum(amount)<50000

    fetch only those country which has less then 3 customers
     select count(*),country from customers group by country having count(*)<3
    
    fetch all customers data and display them namewise ascending order 
    select * from customers order by customerName

    fetch customerName,city,state,country display them first countrywise then statewise and then citywise 

    select customerName,city,state,country from customers order by country,state,city

    fetch 10 most recent orders 

    select * from orders order by orderNumber desc limit 0,10

     fetch most recent next 50 orders 
     select * from orders order by orderNumber desc limit 10,50

    fetch 10 most recent payments 
    select * from payments order by paymentDate desc limit 0,10

    fetch top 3 hightest payments 
    select * from payments order by amount desc  limit 0,3

    fetch most senior 5 employees. 
    select * from employees order by employeeNumber limit 0,5

    fetch most cheapest 3 products 
    select * from products order by buyPrice limit 0,3

    fetch most expensive 5 products 
       select * from products order by buyPrice desc limit 0,5

how to fetch data from more then one table at a time?

joins
-----------------------------
join operation is required when we require to display data from multiple tables.

1) inner join/ equi join 
    inner join is used when we want to fetch data from 2 or more tables based upon condition set on common fields 

    what is common field?
    a field in one table whose type and range of values (domain value) matches with type and range of value in another table.
    
    find customerNumber,Name and his each and every payments details.

    select customerNumber,customerName from customers
    select * from payments
    
    now join both query 
    select customerName,p.* from customers c, payments p where c.customerNumber=p.customerNumber

    display employees Detail and his office location 
    select * from employees e
    select addressline1,addressline2,city,postalcode,state,country from offices o 

    now join both query 
    select e.*,addressline1,addressline2,city,postalcode,state,country from employees e, offices o where e.officecode=o.officecode


    display orderNumber,orderDate,Status and customerName & customerNumber of usa customers 

    select orderNumber,orderDate,status from orders o 
    select customerNumber,customerName,country from customers c where country='usa'

    now join both query 
    select orderNumber,orderDate,status,c.customerNumber,customerName,country from orders o, customers c where country='usa' and o.customerNumber=c.customerNumber

2) left  join
    left join is used when we need to fetch all rows from left side table and only matching row from right side table. here we use common field to match tables. 
    fetch customerNumber,customerName of those customer who has never given any order.
    select customerNumber,customerName from customers c
    select * from orders o 

    now join them 
    select c.customerNumber,customerName,o.* from customers c left join orders o on c.customerNumber=O.customerNumber where o.customerNumber is null

    fetch customerNumber, customerName of those customers who has not given any payments 
    select customerNumber,customerName from customers c
    select * from payments p 

    now join them 
     select c.customerNumber,customerName,p.* from customers c left join payments p on c.customerNumber=p.customerNumber where amount is NULL
     
3) right  join
    right join is used when we need to fetch all rows from right side table and only matching row from left side table. here we use common field to match tables. 

    fetch dummy orders 
    select customerNumber,customerName from customers c, 
    select * from orders o 

    join them 
    select c.customerNumber,customerName,o.* from customers c right join orders o on c.customerNumber=o.customerNumber where c.customerNumber is NULL
4) full join 
    full join is used when we want to fetch matching unmatching data from both tables. 
    select e.*, o.* from employees e, offices o